generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(uuid())
  email             String?   @unique
  firstname         String?
  lastname          String?
  password          String
  username          String    @unique
  passwordChangedAt DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  File File[]
  Log  Log[]
}

model File {
  id           String   @id @default(uuid())
  name         String
  key          String   @unique // S3 key
  size         Int
  type         String
  uploadedAt   DateTime @default(now())
  lastAccessed DateTime @default(now())

  // Folder structure
  folder String?

  // User relationship
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Sharing
  isPublic Boolean @default(false)
  Log      Log[]

  @@index([userId])
  @@index([folder])
}

model Log {
  id        String   @id @default(uuid())
  action    String // "UPLOAD", "DOWNLOAD", "DELETE", "SHARE", "UPDATE"
  details   String? // Additional information about the action
  timestamp DateTime @default(now())

  // User relationship
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Optional file relationship (for file-related actions)
  fileId String?
  file   File?   @relation(fields: [fileId], references: [id], onDelete: SetNull)

  @@index([userId])
  @@index([fileId])
  @@index([action])
  @@index([timestamp])
}
